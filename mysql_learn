1、给root用户添加远程连接权限
  use mysql;
  update user set host=' %' where user=' root';
  flush privileges;
2、新建用户
  create user 'zhangjun'@'%' identified by '123456';
3、查看用户权限
  show grants for zhangjun;
4、查看mysql当前连接
  show processlist;只列出前100条，如果想全列出请使用show full processlist;
5、显示数据表的属性，属性类型，主键信息 ，是否为 NULL，默认值等其他信息
  show columns from tables;
6、中文显示？设置：alter table table_name convert to character set utf8;原来有的数据不会变，新增数据正常显示

7、使用LIKE+通配符%表示任意个字符，_表示单个字符

8、使用MySQL正则表达式
  REGEXP关键字+表达式：select * from table1 where id regexp '.123';（.表示匹配任意一个字符）
  mysql自3.23.4版本后正则不区分大小写，若需要区分使用BINARY关键字：select * from table1 where name regexp binary 'JetPack';
  OR匹配：select * from table1 where name regexp 'JetPack|Mary|jack';
  匹配几个字符之一，匹配任意单个字符：select * from table1 where name regexp '[123] ton';（匹配1 ton,2 ton或3 ton，[^123]表示匹配除这些字符外的任意字符）
  转义特殊字符使用\\:\\f换页，\\n换行，\\r回车，\\t制表，\\v纵向制表，\\\匹配反斜杠本身
  匹配字符类：[:alnum:]  任意字母和数字（同[a-zA-Z0-9]）
             [:alpha:]  任意字母（同[a-zA-Z]）
             [:blank:]  空格和制表（同[\\t]）
             [:cntrl:]  ASCII控制字符（ASCII0到31和127）
             [:digit:]  任意数字（同[0-9]）
             [:print:]  任意可打印字符
             [:graph:]  与[:print:]形同，但不包括空格
             [:lower:]  任意小写字母（同[a-z]）
             [:punct:]  既不在[:alnum:]又不在[:cntrl:]中的任意字符
             [:space:]  包括空格在内的任意空白字符（同[\\f\\\n\\r\\t\\v]）
             [:upper:]  任意大写字母（同[A-Z]）
             [:xdigit:] 任意十六进制数字（同[a-fA-F0-9]）
  重复元字符：*  0个或多个匹配
             +  1个或多个匹配（等于{1,}）
             ?  0个或1个匹配（等于{0,1}）
             {n}  指定数目的匹配
             {n,} 不少于指定数目的匹配
             {n,m}  匹配数目的范围（m不超过255）
             例：select name from table1 where name regexp '\\([0-9] sticks?\\)';s后面的?使s可选，所以会匹配stick和sticks
                select name from table1 where id regexp '[[:digit:]]{4}';匹配连在一起的四位数字
  定位与字符：^  文本的开始（两种用法在集合[]里表示否定该集合，否则指串的开始处）
             $  文本的结尾
             [[:<:]]  词的开始
             [[:>:]]  词的结尾
       
9、拼接字段：（多数DBMS使用+或||实现拼接，而mysql使用concat()函数来实现）
            select concat(name,' (',city,')') from table1 order by name;（concat()函数使用,将多个字符串分隔）
            Trim()函数去掉串左右两边的空格，rtrim去掉右边的空格，ltrim去掉左边的空格
            
10、执行算术计算：select name,id,salary,id*salary as money from staff where name regexp '[^a-zA_Z]';（+,-,*,/）

11、文本处理函数：upper()  转换为大写
                lower()  转换为小写
                left(str,lenght)  返回串左边指定长度的字符
                right(str,lenght)  返回串右边指定长度的字符
                length() 返回串的长度
                locate() 找出串的一个子串
                substring(str, pos, length)  返回从指定位置开始指定长度的字符串，不指定长度就到结尾
                soundex()  返回串的SOUNDEX值，用来匹配发音相似的字符串？？？
       
12、日期和时间处理函数：AddDate()  增加一个日期（天、周等）
                      AddTime()  增加一个时间（时、分等）
                      CurDate()  返回当前日期
                      Curtime()  返回当前时间
                      Date()  返回日期时间的日期部分
                      DateDiff()  计算两个日期之差
                      Date_Add()  高度灵活的日期运算函数
                      Date_Format()  返回一个格式化的日期或时间串
                      Day()  返回一个日期的天数部分
                      DayOfWeek()  对于一个日期，返回对应的星期几
                      Hour()  返回一个时间的小时部分
                      Minute()  返回一个时间的分部分
                      Month()  返回一个日期的月份部分
                      Now()  返回当前日期和时间
                      Second()  返回一个时间的秒部分
                      Time()  返回一个日期的时间的时间部分
                      Year()  返回一个日期的年份部分
         示例：select * from table1 where Date(order_date) = '2022-07-31';
              select * from table1 where Date(order_date) between '2022-07-01' and '2022-07-31';
              select * from table1 where Year(order_date) = 2022 and month(order_date) = 7;
              
13、数值处理函数：Abs()  返回一个数的绝对值
                Cos()  返回一个角度的余弦
                Exp()  返回一个数的指数值
                Mod()  返回除操作的余数
                Pi()  返回圆周率
                Rand()  返回一个随机数
                Sin()  返回一个角度的正弦
                Sqrt()  返回一个数的平方根
                Tan()  返回一个角度的正切
       
14、聚集函数：AVG()  返回某列的平均值,只用于单个列并且会忽略值为null的行，若需求不忽略null可使用avg(ifnull(column_name,0))
             COUNT()  返回某列的行数,使用count(*)对表的所有行计数，使用count(column_name)只对有值的行计数忽略null值
             MAX()  返回某列的最大值，忽略值为null的行
             MIN()  返回某列的最小值，忽略值为null的行
             SUM()  返回某列值之和，忽略值为null的行
             示例：select AVG(prod_price) as avg_price from products where vend_id = 1003;
                 
15、DISTINCT去重：对单列去重也可对多列去重，对多列去重时去除指定的列值都一样的行：select distinct name,address,id form table1;（去重name,address,id三列值都一样的行）
           
16、UNION (ALL)：组合多条查询，默认去重，如果需要不去重加上ALL，使用排序时只能在最后一条select语句加order by字句，不允许使用多条order by
            
17、启用全文本搜索支持，一般在创建表时使用FULLTEXT字句启用,MyISAM引擎支持全文本搜索，默认使用的InnoDB引擎不支持。不要再导入数据时使用FULLTEXT，应该先导入所有数据，然后再修改表定义
    FULLTEXT，花费时间更少
      定义示例：CREATE TABLE table_name
               (note_id int NOT NULL AUTO_INCREMENT,
                prod_id char(10) NOT NULL,
                note_date datetime NOT NULL,
                note_text text NULL,
                PRIMARY KEY(note_id),
                FULLTEXT(note_text)) ENGINE=MyISAM;
      使用示例：select note_text from table_name where Match(note_text) Against('rabbit');默认不区分大小写，使用BINARY区分
   注意事项：
          1.在索引全文本数据时，短词被忽略且从索引中排除。短词定义为 那些具有3个或3个以下字符的词（如果需要，这个数目可以更改）。
          2.MySQL带有一个内建的非用词（stopword）列表，这些词在索引全文本数据时总是被忽略。如果需要，可以覆盖这个列表
          3.许多词出现的频率很高，搜索它们没有用处（返回太多的结果）。 因此，MySQL规定了一条50%规则，如果一个词出现在50%以上 的行中，则将它作为一个非用词忽略。50%规则不用于IN BOOLEAN MODE。
          4.如果表中的行数少于3行，则全文本搜索不返回结果（因为每个词 或者不出现，或者至少出现在50%的行中）
          5.忽略词中的单引号。例如，don't索引为dont。
          6.不具有词分隔符（包括日语和汉语）的语言不能恰当地返回全文本搜索结果。
          7.仅在MyISAM数据库引擎中支持全文本搜索
      
18、查询扩展：能找出可能相关的结果，即使它们并不精确包含所查找的词
           使用方法：select note_text from table_name where Match(note_text) Against('anvils' WITH QUERY EXPANSION);
          
             
19、布尔文本搜索：即使没有FULLTEXT索引也可以使用
      操作符说明：+  包含，词必须存在
                 -  排除，词必须不存在
                 >  包含，而且增加等级值
                 <  包含，且减少等级值
                 () 把词组成子表达式（允许这些子表达式作为一个组被包含、排除、排序等）
                 _  取消一个词的排序值
                 *  词尾的通配符
                 "" 定义一个短语（与单个词的列表不一样，它匹配整个短语以便包含或排除这个短语）
          示例：匹配包含rabbit和bait的行：select note_text from table_name where Match(note_text) Against('+rabbit +bait' IN BOOLEAN MODE);
               不指定操作符，匹配包含rabbit和bait中的至少一个词的行：select note_text from table_name where Match(note_text) Against('rabbit bait' IN BOOLEAN MODE);
               匹配短语rabbit bait而不是匹配两个词：select note_text from table_name where Match(note_text) Against('"rabbit bait"' IN BOOLEAN MODE);
               匹配rabbit和carrot，增加前者的等级，降低后者的等级：select note_text from table_name where Match('>rabbit <carrot' IN BOOLEAN MODE);
               匹配safe和combination，降低后者的等级：select note_text from table_name where Match(note_text) Against('+safe +(combination)' IN BOOLEAN MODE);
               
20、查看数据表状态（引擎、创建时间、更新时间等）：SHOW TABLE STATUS FROM db_name WHERE NAME='table_name';

21、修改数据表引擎：alter table table_name engine=innodb; 
                  alter table table_name engine=myisam;
                 
                
            
           
             

  
  
